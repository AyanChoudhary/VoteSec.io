import { OrderByDocumentProducerComparator } from "../orderByDocumentProducerComparator";
/** @hidden */
export class MinAggregator {
    /**
     * Represents an aggregator for MIN operator.
     * @constructor MinAggregator
     * @ignore
     */
    constructor() {
        this.value = undefined;
        this.comparer = new OrderByDocumentProducerComparator(["Ascending"]);
    }
    /**
     * Add the provided item to aggregation result.
     * @memberof MinAggregator
     * @instance
     * @param other
     */
    aggregate(other) {
        if (this.value === undefined) {
            this.value = other;
        }
        else {
            const otherType = other == null ? "NoValue" : typeof other;
            if (this.comparer.compareValue(other, otherType, this.value, typeof this.value) < 0) {
                this.value = other;
            }
        }
    }
    /**
     * Get the aggregation result.
     * @memberof MinAggregator
     * @instance
     */
    getResult() {
        return this.value;
    }
}
//# sourceMappingURL=MinAggregator.js.map